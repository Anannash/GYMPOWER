/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gym_app;

import com.sun.jdi.connect.spi.Connection;
import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author caos1
 */
public class Registro_Empleado extends javax.swing.JFrame {

    Reglas IDD = new Reglas();
    
    private JPanelConFondo fondo;
    public File archivoSeleccionado;
    private Point mPoint;

    // Obtener la fecha actual
    LocalDate fechaActual = LocalDate.now();

    // Formatear la fecha como una cadena en el formato deseado (YYYY-MM-DD)
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    String fechaFormateada = fechaActual.format(formatter);

    public Registro_Empleado() {
        setUndecorated(true);
        // Inicializa los componentes de la interfaz gráfica
        initComponents();
        fondo = new JPanelConFondo("src/Image/perfilF.png");
        Fondo.setLayout(new BorderLayout());
        Fondo.add(fondo);
        // foto de salir
        SetImageButton("src/Image/X.png", Salir);
        SetImageButton("src/Image/regresar.png", Regresarbtn);
        fecha.setText(fechaFormateada);
        //ocultar 
        altabtn.show(false);
        MCbtn.show(false);

        // Ubica la ventana en el centro de la pantalla
        setLocationRelativeTo(null);
         IDbtn.setText("Seleccione el cargo");
    }

    private void SetImageButton(String url, JButton boton) {
        ImageIcon image = new ImageIcon(url);
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(boton.getWidth(), boton.getHeight(), Image.SCALE_SMOOTH));
        boton.setIcon(icon);

        boton.setBorderPainted(false);
        boton.setContentAreaFilled(false);
        boton.setFocusPainted(false);
        boton.setOpaque(false);
        this.repaint();
    }

    private void seleccionarImagen() {
        // Crea un JFileChooser para que el usuario seleccione una imagen
        JFileChooser fileChooser = new JFileChooser();
        // Muestra el diálogo para seleccionar un archivo y espera a que el usuario elija uno
        int resultado = fileChooser.showOpenDialog(this);
        // Si el usuario selecciona un archivo y hace clic en "Abrir"
        if (resultado == JFileChooser.APPROVE_OPTION) {
            // Obtiene el archivo seleccionado por el usuario
            File archivoSeleccionado = fileChooser.getSelectedFile();
            // Crea un ImageIcon a partir de la ruta del archivo seleccionado
            ImageIcon imagenSeleccionada = new ImageIcon(archivoSeleccionado.getPath());

            //Se escala la imagen al tamaño deseado
            Image imagen = imagenSeleccionada.getImage();
            int ancho = 200;
            int alto = 240;

            // Escala la imagen al tamaño deseado
            Image imagenCamb = imagen.getScaledInstance(ancho, alto, imagen.getHeight(Perfil));
            // Crea un nuevo ImageIcon con la imagen escalada
            ImageIcon imagen2 = new ImageIcon(imagenCamb);
            // Establece el ImageIcon escalado en un componente gráfico llamado LabeImagen
            Perfil.setIcon(imagen2);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        fecha = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Perfil = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtCURP = new javax.swing.JTextField();
        txtRFC = new javax.swing.JTextField();
        txtTelefonoE = new javax.swing.JTextField();
        txtCP = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        CBne = new javax.swing.JComboBox<>();
        CBsm = new javax.swing.JComboBox<>();
        CBCargo = new javax.swing.JComboBox<>();
        CBSexo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        Cfecha = new com.toedter.calendar.JCalendar();
        jLabel7 = new javax.swing.JLabel();
        IDbtn = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Cargar = new javax.swing.JButton();
        txtSueldo = new javax.swing.JTextField();
        MCbtn = new javax.swing.JButton();
        txtAM = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtAP = new javax.swing.JTextField();
        Fondo = new javax.swing.JPanel();
        Salir = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        Regresarbtn = new javax.swing.JButton();
        eliminarbtn = new javax.swing.JButton();
        modificarbtn = new javax.swing.JButton();
        altabtn = new javax.swing.JButton();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fecha.setEditable(false);
        fecha.setBackground(new java.awt.Color(251, 250, 248));
        fecha.setToolTipText("");
        fecha.setCaretColor(new java.awt.Color(153, 153, 153));
        fecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaActionPerformed(evt);
            }
        });
        jPanel1.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(779, 20, 166, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Fecha:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 22, -1, -1));

        Perfil.setBackground(new java.awt.Color(204, 255, 204));
        Perfil.setForeground(new java.awt.Color(204, 102, 0));
        Perfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/perfildef.png"))); // NOI18N
        jPanel1.add(Perfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 0, 388, 272));

        txtTelefono.setBackground(new java.awt.Color(251, 250, 248));
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 373, 240, -1));

        txtDireccion.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 323, 240, -1));

        txtCURP.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtCURP, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 160, 237, -1));

        txtRFC.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 213, 240, -1));

        txtTelefonoE.setBackground(new java.awt.Color(251, 250, 248));
        txtTelefonoE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoEKeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefonoE, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 373, 240, -1));

        txtCP.setBackground(new java.awt.Color(251, 250, 248));
        txtCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPActionPerformed(evt);
            }
        });
        jPanel1.add(txtCP, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 273, 240, -1));

        btnRegistrar.setBackground(new java.awt.Color(255, 145, 77));
        btnRegistrar.setFont(new java.awt.Font("Eras Bold ITC", 1, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 480, 430, -1));

        CBne.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Basica", "Medio Superior", "Superior" }));
        jPanel1.add(CBne, new org.netbeans.lib.awtextra.AbsoluteConstraints(792, 433, -1, -1));

        CBsm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IMSS", "ISSSTE", "Cruz roja" }));
        jPanel1.add(CBsm, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 433, 90, -1));

        CBCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Instructor", "Entrenador", "Secretaria" }));
        CBCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBCargoActionPerformed(evt);
            }
        });
        jPanel1.add(CBCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(903, 79, -1, -1));

        CBSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "H" }));
        jPanel1.add(CBSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(792, 79, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 20, 27, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Fecha de Nacimiento");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 308, -1, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("Apellido Materno:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 243, -1, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("Sexo");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 80, -1, 20));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel15.setText("Nivel de educacion");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 403, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Servicio medico");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(522, 403, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Telefono:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 353, -1, -1));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Telefono de emergencias:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 353, 240, -1));

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel19.setText("Codigo Postal:");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 243, -1, -1));

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setText("Direccion:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 303, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Correo electronico:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 303, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("CURP:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 133, -1, -1));

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setText("Sueldo:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 79, -1, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setText("Cargo:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(843, 79, -1, -1));

        txtCorreo.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 323, 240, -1));

        Cfecha.setWeekdayForeground(new java.awt.Color(255, 145, 77));
        jPanel1.add(Cfecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 338, 399, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Nombre:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 90, -1));

        IDbtn.setEditable(false);
        IDbtn.setBackground(new java.awt.Color(251, 250, 248));
        IDbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDbtnActionPerformed(evt);
            }
        });
        IDbtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IDbtnKeyTyped(evt);
            }
        });
        jPanel1.add(IDbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 20, 203, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Apellido Paterno:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 183, -1, -1));

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel21.setText("R.F.C:");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 183, -1, -1));

        Cargar.setText("Cambiar Imagen");
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });
        jPanel1.add(Cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 278, 327, -1));

        txtSueldo.setBackground(new java.awt.Color(251, 250, 248));
        txtSueldo.setToolTipText("");
        txtSueldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSueldoActionPerformed(evt);
            }
        });
        jPanel1.add(txtSueldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 81, 163, -1));

        MCbtn.setBackground(new java.awt.Color(255, 145, 77));
        MCbtn.setFont(new java.awt.Font("Eras Bold ITC", 0, 14)); // NOI18N
        MCbtn.setForeground(new java.awt.Color(255, 255, 255));
        MCbtn.setText("Modificar cliente");
        MCbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCbtnActionPerformed(evt);
            }
        });
        jPanel1.add(MCbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 480, 430, 30));

        txtAM.setBackground(new java.awt.Color(251, 250, 248));
        txtAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAMActionPerformed(evt);
            }
        });
        jPanel1.add(txtAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 237, -1));

        txtNombre.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 237, -1));

        txtAP.setBackground(new java.awt.Color(251, 250, 248));
        jPanel1.add(txtAP, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 237, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1000, 550));

        Fondo.setBackground(new java.awt.Color(255, 145, 77));
        Fondo.setPreferredSize(new java.awt.Dimension(836, 336));
        Fondo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                FondoMouseDragged(evt);
            }
        });
        Fondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FondoMousePressed(evt);
            }
        });
        Fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Salir.setBackground(new java.awt.Color(193, 86, 14));
        Salir.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        Salir.setForeground(new java.awt.Color(255, 255, 255));
        Salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        Fondo.add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 15, 60, 53));

        jLabel20.setFont(new java.awt.Font("Eras Demi ITC", 1, 48)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Registro de Empleado");
        Fondo.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 39, 573, -1));

        Regresarbtn.setBackground(new java.awt.Color(193, 86, 14));
        Regresarbtn.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        Regresarbtn.setForeground(new java.awt.Color(255, 255, 255));
        Regresarbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Regresarbtn.setMaximumSize(new java.awt.Dimension(10, 8));
        Regresarbtn.setMinimumSize(new java.awt.Dimension(10, 8));
        Regresarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarbtnActionPerformed(evt);
            }
        });
        Fondo.add(Regresarbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 20, 40, 40));

        eliminarbtn.setBackground(new java.awt.Color(255, 145, 77));
        eliminarbtn.setFont(new java.awt.Font("Eras Bold ITC", 0, 14)); // NOI18N
        eliminarbtn.setForeground(new java.awt.Color(255, 255, 255));
        eliminarbtn.setText("Eliminar");
        eliminarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarbtnActionPerformed(evt);
            }
        });
        Fondo.add(eliminarbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, -1, -1));

        modificarbtn.setBackground(new java.awt.Color(255, 145, 77));
        modificarbtn.setFont(new java.awt.Font("Eras Bold ITC", 0, 14)); // NOI18N
        modificarbtn.setForeground(new java.awt.Color(255, 255, 255));
        modificarbtn.setText("Modificar");
        modificarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarbtnActionPerformed(evt);
            }
        });
        Fondo.add(modificarbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, -1, -1));

        altabtn.setBackground(new java.awt.Color(255, 145, 77));
        altabtn.setFont(new java.awt.Font("Eras Bold ITC", 0, 14)); // NOI18N
        altabtn.setForeground(new java.awt.Color(255, 255, 255));
        altabtn.setText("Alta de Cliente");
        altabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altabtnActionPerformed(evt);
            }
        });
        Fondo.add(altabtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, -1, -1));

        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 130));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            SimpleDateFormat calendario = new SimpleDateFormat("yyyy-MM-dd");

            String Alta = "INSERT INTO Empleado (id_Empleado, nombreE, apellidoPE, apellidoME, "
                    + "correoE, celularE, domicilioE, sueldoE, fecha_registroE, fechaCumple, "
                    + "puesto, sexoE, servicioMedico, telefonoME, codigoPo, curp, nivelEducacion, "
                    + "rfc, contrasena, foto) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

            conectar ObjetoConexion = new conectar();

            FileInputStream fis = new FileInputStream(archivoSeleccionado);
            CallableStatement guardar = (CallableStatement) ObjetoConexion.getConexion().prepareCall(Alta);

            // Obtener la fecha del JCalendar
            java.util.Date selectedDate = Cfecha.getDate();
            java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());

            guardar.setString(1, IDbtn.getText());
            guardar.setString(2, txtAM.getText());
            guardar.setString(3, txtAP.getText());
            guardar.setString(4, txtAM.getText());
            guardar.setString(5, txtCorreo.getText());
            guardar.setInt(6, Integer.parseInt(txtTelefono.getText()));
            guardar.setString(7, txtDireccion.getText());
            guardar.setDouble(8, Double.parseDouble(txtSueldo.getText()));
            guardar.setDate(9, java.sql.Date.valueOf(fechaActual));
            guardar.setDate(10, sqlDate);
            guardar.setString(11, CBCargo.getSelectedItem().toString());
            guardar.setString(12, CBSexo.getSelectedItem().toString());
            guardar.setString(13, CBsm.getSelectedItem().toString());
            guardar.setInt(14, Integer.parseInt(txtTelefonoE.getText()));
            guardar.setInt(15, Integer.parseInt(txtCP.getText()));
            guardar.setString(16, txtCURP.getText());
            guardar.setString(17, CBne.getSelectedItem().toString());
            guardar.setString(18, txtRFC.getText());
            guardar.setString(19, "PowerGYM123");
            guardar.setBinaryStream(20, fis, (int) archivoSeleccionado.length());

            // Ejecutar la inserción
            guardar.executeUpdate();
            JOptionPane.showMessageDialog(null, "Los datos han sido registrados");

            //REINICIO
            IDbtn.setText("");
            txtAM.setText("");
            txtAP.setText("");
            txtAM.setText("");
            txtCorreo.setText("");
            txtTelefono.setText("");
            txtDireccion.setText("");
            txtSueldo.setText("");
            txtTelefonoE.setText("");
            txtCP.setText("");
            txtRFC.setText("");
            Perfil.setIcon(null);
            txtCURP.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se ha podido registrar los datos. Error: " + e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /*SimpleDateFormat calendario = new SimpleDateFormat("yyyy-MM-dd");
            // Se crea un objeto SimpleDateFormat para dar formato a la fecha.
            PreparedStatement guardar = conecta.preparetStatement("INSERT INTO registro_empleado (id_Empleado, nombreE, apellidoPE, apellidoME,"
                     + "correoE, celularE, domicilioE, sueldoE, edadE, fecha_registroE, puesto, sexoE"
                     + "servicioMedico, telefonoME, codigoPo, curp, nivelEducacion, rfc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        try{
             
             // Se prepara una sentencia SQL para insertar datos en la tabla registro_empleado.

             guardar.setString(1, txtID.getText());
             guardar.setString(2, txtNombre.getText());
             guardar.setString(3, txtAP.getText());
             guardar.setString(4, txtAM.getText());
             guardar.setString(5, txtCorreo.getText());
             guardar.setString(6, txtDireccion.getText());
             guardar.setInt(7, Integer.parseInt(txtTelefono.getText()));
             guardar.setString(8, CBSexo.getSelectedItem().toString());
             guardar.setDate(9, (java.sql.Date)Cfecha.getDate());
             guardar.setInt(10, Integer.parseInt(txtEdad.getText()));
             guardar.setInt(11, Integer.parseInt(txtSueldo.getText()));
             guardar.setInt(12, Integer.parseInt(txtTelefonoE.getText()));
             guardar.setInt(13,Integer.parseInt(txtCP.getText()));
             guardar.setString(14, txtCURP.getText());
             guardar.setString(15, txtRFC.getText());
             guardar.setString(16, CBsm.getSelectedItem().toString());
             guardar.setString(17, CBCargo.getSelectedItem().toString());
             // Se establecen los valores de los parámetros en la sentencia preparada.
             guardar.executeUpdate();
             // Se ejecuta la inserción de datos en la base de datos.
             JOptionPane.showMessageDialog(null, "Los datos han sido registrados");
              // Se muestra un mensaje de éxito al usuario.
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No se a podido registrar los datos. Error: "+e);
            // En caso de error, se muestra un mensaje de error al usuario.
        }*/


    }//GEN-LAST:event_jButton1ActionPerformed

    private void IDbtnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDbtnKeyTyped
        // TODO add your handling code here:
        if (IDbtn.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_IDbtnKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        // TODO add your handling code here:
        if (IDbtn.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtTelefonoEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoEKeyTyped
        // TODO add your handling code here:
        if (IDbtn.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoEKeyTyped

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void FondoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FondoMouseDragged
        // TODO add your handling code here:

        int CX = this.getLocation().x;
        int CY = this.getLocation().y;

        int MoveX = ((CX + evt.getX()) - (CX + mPoint.x));
        int MoveY = ((CY + evt.getY()) - (CY + mPoint.y));

        int x = CX + MoveX;
        int y = CY + MoveY;

        this.setLocation(x, y);
    }//GEN-LAST:event_FondoMouseDragged

    private void FondoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FondoMousePressed
        // TODO add your handling code here:
        mPoint = evt.getPoint();
        getComponentAt(mPoint);
    }//GEN-LAST:event_FondoMousePressed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed

        //METODO PARA CARGAR IMAGEN desde el explorador
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            archivoSeleccionado = fileChooser.getSelectedFile();
            String ruta = archivoSeleccionado.getName();
            System.out.println(ruta);

            try {
                Image imagenSeleccionada = ImageIO.read(archivoSeleccionado);
                ImageIcon Imagen = new ImageIcon(imagenSeleccionada);

                int labelancho = Perfil.getWidth();
                int labellargo = Perfil.getHeight();

                Image scaledImage = Imagen.getImage().getScaledInstance(labelancho, labellargo, Image.SCALE_SMOOTH);

                Perfil.setIcon(new ImageIcon(scaledImage));
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "Error: " + e.toString());
            }
        }

    }//GEN-LAST:event_CargarActionPerformed

    private void CBCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBCargoActionPerformed
        // TODO add your handling code here:

        if (CBCargo.getSelectedItem().equals("Entrenador")) {

            IDbtn.setText(IDD.CrearIDEmpleado("E", fechaFormateada));

        } else if (CBCargo.getSelectedItem().equals("Gerente")) {

            IDbtn.setText(IDD.CrearIDEmpleado("G", fechaFormateada));

        } else if (CBCargo.getSelectedItem().equals("Instructor")) {

            IDbtn.setText(IDD.CrearIDEmpleado("I", fechaFormateada));

        } else if (CBCargo.getSelectedItem().equals("Secretaria")) {

            IDbtn.setText(IDD.CrearIDEmpleado("S", fechaFormateada));

        }


    }//GEN-LAST:event_CBCargoActionPerformed

    private void fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaActionPerformed

    private void txtSueldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSueldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSueldoActionPerformed

    private void txtCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPActionPerformed

    private void RegresarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarbtnActionPerformed
        // TODO add your handling code here:

        int R = JOptionPane.showConfirmDialog(null, "Estas Seguro de regresar?", "Regresar", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);

        if (R == 0) {
            Perfil_Empleado Perfil = new Perfil_Empleado();
            Perfil.setVisible(true);
            this.setVisible(false);
        }

    }//GEN-LAST:event_RegresarbtnActionPerformed

    private void eliminarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarbtnActionPerformed
        // TODO add your handling code here:
        String id_Empleado = JOptionPane.showInputDialog("Ingrese el ID del Empleado: ", JOptionPane.QUESTION_MESSAGE);

try {
    // Conectar a la base de datos
    conectar ObjetoConexion = new conectar();

    // Consulta SQL para eliminar un empleado
    String Eliminar = "DELETE FROM Empleado WHERE id_Empleado = ?;";

    // Preparar la sentencia SQL para la eliminación
    PreparedStatement ps = ObjetoConexion.prepareStatement(Eliminar);

    // Establecer el parámetro de la consulta
    ps.setString(1, id_Empleado);

    // Ejecutar la eliminación
    int filasAfectadas = ps.executeUpdate();

    // Comprobar si se eliminó alguna fila
    if (filasAfectadas > 0) {
        JOptionPane.showMessageDialog(null, "Se eliminó el empleado con ID: " + id_Empleado);
    } else {
        JOptionPane.showMessageDialog(null, "No se encontró el empleado con ID: " + id_Empleado);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}

    }//GEN-LAST:event_eliminarbtnActionPerformed

    private void modificarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarbtnActionPerformed
        // TODO add your handling code here:
        String id_Empelado = JOptionPane.showInputDialog("Ingrese el ID del Empleado: ", JOptionPane.QUESTION_MESSAGE);

        MCbtn.show(true);
       // Guardar.show(false);
        Buscardatos(id_Empelado);

    }//GEN-LAST:event_modificarbtnActionPerformed

    private void altabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altabtnActionPerformed
        // TODO add your handling code here:
        altabtn.show(true);
        MCbtn.show(false);
        //  Guardar.show(true);
    }//GEN-LAST:event_altabtnActionPerformed

    private void MCbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCbtnActionPerformed
        // TODO add your handling code here:
        try {

            conectar ObjetoConexion = new conectar();

            String Modificar = "UPDATE Empleado \n"
                    + "SET \n"
                    + "    nombreE = ?, \n"
                    + "    apellidoPE = ?, \n"
                    + "    apellidoME = ?, \n"
                    + "    correoE = ?, \n"
                    + "    celularE = ?, \n"
                    + "    domicilioE = ?, \n"
                    + "    sueldoE = ?, \n"
                    + "    fecha_registroE = ?, \n"
                    + "    fechaCumple = ?, \n"
                    + "    puesto = ?, \n"
                    + "    sexoE = ?, \n"
                    + "    servicioMedico = ?, \n"
                    + "    telefonoME = ?, \n"
                    + "    codigoPo = ?, \n"
                    + "    curp = ?, \n"
                    + "    nivelEducacion = ?, \n"
                    + "    rfc = ?, \n"
                    + "    contrasena = ?, \n"
                    + "    foto = ? \n"
                    + "WHERE \n"
                    + "    id_Empleado = ?;";

            //pa la imagen
            FileInputStream fis = new FileInputStream(archivoSeleccionado);
            //pa el ingreso de datos al SQL bb
            PreparedStatement ps = ObjetoConexion.prepareStatement(Modificar);

            java.util.Date selectedDate = Cfecha.getDate();
            java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());

            ps.setString(1, txtNombre.getText());
            ps.setString(2, txtAP.getText());
            ps.setString(3, txtAM.getText());
            ps.setString(4, txtCorreo.getText());
            ps.setString(5, txtTelefono.getText());
            ps.setString(6, txtDireccion.getText());
            ps.setDouble(7, Double.parseDouble(txtSueldo.getText()));
            ps.setDate(8, java.sql.Date.valueOf(fechaActual)); 
            ps.setDate(9, sqlDate);
            ps.setString(10, CBCargo.getSelectedItem().toString());
            ps.setString(11, CBSexo.getSelectedItem().toString());
            ps.setString(12, CBsm.getSelectedItem().toString());
            
            
            
           

          
            ps.setDate(10, sqlDate);
            ps.setBinaryStream(6, fis, (int) archivoSeleccionado.length());
            ps.setString(11, IDbtn.getText());

            // System.out.println("No furula el codigo");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Registro_Empleado.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_MCbtnActionPerformed

    private void txtAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAMActionPerformed

    private void IDbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDbtnActionPerformed

    ///METODO PARA CARGAR DATOS
    public void Buscardatos(String ID) {
        try {
            conectar ObjetoConexion = new conectar();

            String cosulta = "SELECT * FROM Empleado WHERE id_Empleado=?";

            PreparedStatement ps = ObjetoConexion.prepareStatement(cosulta);

            ps.setString(1, ID);

            ResultSet resultado = ps.executeQuery();

            if (resultado.next()) {
                String nombre = resultado.getString("nombreE");
                String apellidoP = resultado.getString("apellidoPE");
                String apellidoM = resultado.getString("apellidoME");
                String correo = resultado.getString("correoE");
                int celular = resultado.getInt("celularE");
                int celularE = resultado.getInt("telefonoME");
                String domicilio = resultado.getString("domicilioE");
                byte[] fotoBytes = resultado.getBytes("foto");
                String sexo = resultado.getString("sexoE");
                String puesto = resultado.getString("puesto");
                int CP = resultado.getInt("codigoPo");
                String curp = resultado.getString("curp");
                String RFC = resultado.getString("rfc");
                String Educacion = resultado.getString("nivelEducacion");
                String SMedico = resultado.getString("servicioMedico");
                double sueldo = resultado.getDouble("sueldoE");

                // Convertir arreglo de bytes a ImageIcon
                ImageIcon imagen = new ImageIcon(fotoBytes);
                // Escalar la imagen si es necesario

                Image imagenEscalada2 = imagen.getImage().getScaledInstance(Perfil.getWidth(), Perfil.getHeight(), Image.SCALE_SMOOTH);

                ImageIcon imagenEscaladaIcon2 = new ImageIcon(imagenEscalada2);

                // Asignar la imagen al JLabel
                Perfil.setIcon(imagenEscaladaIcon2);

                txtNombre.setText(nombre);
                txtAP.setText(apellidoP);
                txtAM.setText(apellidoM);
                txtCorreo.setText(correo);
                txtDireccion.setText(domicilio);
                txtCP.setText(String.valueOf(CP));
                txtCURP.setText(curp);
                txtRFC.setText(RFC);
                txtTelefono.setText(String.valueOf(celular));
                txtTelefonoE.setText(String.valueOf(celularE));
                txtSueldo.setText(Double.toString(sueldo));

                if (sexo.equals("M")) {
                    CBSexo.setSelectedIndex(0);
                } else {
                    CBSexo.setSelectedIndex(1);
                }

                switch (puesto) {
                    case "Gerente":
                        CBCargo.setSelectedIndex(0);
                        break;
                    case "Instructor":
                        CBCargo.setSelectedIndex(1);
                        break;
                    case "Entrenador":
                        CBCargo.setSelectedIndex(2);
                        break;
                    case "Secretaria":
                        CBCargo.setSelectedIndex(3);
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "No se encontro puesto");
                }

                switch (Educacion) {
                    case "Basica":
                        CBne.setSelectedIndex(0);
                        break;
                    case "Medio Superior":
                        CBne.setSelectedIndex(1);
                        break;

                    case "Superior":
                        CBne.setSelectedIndex(2);
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "No se encontro el nivel de educacion");
                }

                if (SMedico.equals("IMSS")) {
                    CBsm.setSelectedIndex(0);
                } else {
                    CBsm.setSelectedIndex(1);
                }

            } else {
                JOptionPane.showMessageDialog(null, "No se pudo encontrar al usuario");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.toString());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Registro_Empleado().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBCargo;
    private javax.swing.JComboBox<String> CBSexo;
    private javax.swing.JComboBox<String> CBne;
    private javax.swing.JComboBox<String> CBsm;
    private javax.swing.JButton Cargar;
    private com.toedter.calendar.JCalendar Cfecha;
    private javax.swing.JPanel Fondo;
    private javax.swing.JTextField IDbtn;
    private javax.swing.JButton MCbtn;
    private javax.swing.JLabel Perfil;
    private javax.swing.JButton Regresarbtn;
    private javax.swing.JButton Salir;
    private javax.swing.JButton altabtn;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton eliminarbtn;
    private javax.swing.JTextField fecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modificarbtn;
    private javax.swing.JTextField txtAM;
    private javax.swing.JTextField txtAP;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtCURP;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtSueldo;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoE;
    // End of variables declaration//GEN-END:variables
}
